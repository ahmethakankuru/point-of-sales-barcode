<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAR8AAAEfAXIKyfcAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEqUlEQVR4Xu2beahWRRiHb1lZUqZloC1kGZVhVJbttEC7ZEpUWKSBISWFChIt9EcLrbSXtmvUH2UG
        QYSRCgVmRv1RYWaiYaIVFdG+b89z6YUplPjuOXO/ObfvBw+X+/KdmXfmnDPzzjtzujpqn7aEwbBV93//
        A+0FM+Bl+BT+TPgSlsI1cCD0KR0Jr0Da4P/iXTgTGq2d4Vn4A9LGbYDn4F64Fu6Cp+EDSH8nr8IIaJwO
        gDUQDfkFHoAxsAVsTiPhevgG4tov4ERojA6FryEa8CLsA61oF3gYogw7cAIUr6GwHsLxe8DRvqeaAj+D
        Zf0Adm6xsqHLIBp/FdSh8fA7WOY6GAhFahJE45/UUKOcHqPsGzWUpm3hI9DBz6Duu+TA+RZYvq/CHlCU
        zoe4Q5dryKCTIeq4TkNJegZ07FvwacilFWA9b3f/V4j6Q8zbCzRklO9/PAXDNZSggyGcmqoho46HqOs8
        DSXIACWcOl1DRrmgirrqmmYrazKEUwdpyChft1hb3KKhBKXz/2EaMmp7iLqKiQdctoZT4zRk1L4Qdc3S
        UIL2h3DKhEdOOcZEXWdpKEGuAT4GnVqkIaNcUlvPbzBEQyl6CHTMZetOGjLIjo6VpomSonQa6JjcrCGD
        LoKoI/er1rJcrLwJOudiZXeoU9tB3H0Tqs4GxSmN0l4D5+y69BhE2ZdoKFXmAcLReVAlGxRKcwEmXLaG
        YuVKcDmEwwthR+iJ3DAx2ouyNsJuULx2hVUQjpvubnXOPhrSjjTJcgg0RoPgJYgGiOOCq8VhsCl5jYmV
        FyC97h0oZunbivrBlfAVpA0ywfkhuBXmBolzuk/Jr5D+zmzw3VDkiN+KjNjuhM8hbeDmMKv0BOwNfUo+
        EcfBreDg6KO9Ft6DJXAfjIWcKbWOOuqovTI8duf4JDgHLvj776lgcnUA9Cm5iDkbZsNKcB2/qZE/xYFx
        LlwIPY0i265R8Cik2+Q94UeYD8dAI7QfPA//PhVikPMGGNhcCuYPjgK3u4+AU+BiuA0MjH6C9HrR7m+L
        1DZwA6SO2wmLwaxxq5ul8erYmWmEaBT5IBS1RW6c7t1NG+5jW9cegWeEHoF0/FgNDppt1+HgGZ5w7H04
        AXLIBr8OUZeZp7Zmhj24ZNweDj0OuacxcwQ3QYwxvh6+Yr2u0RA7wjozE3pTxg5xdshXI/eGzD/k6YxP
        IBrvQaZ2yOApBt3vIfe2XLfM8blys1K5AtqpcyEOUBlAZZ8dbHA0/ikNBcjpN3wy+MomE5LfQfT2DlCC
        HBhNt+mXr6QzUxaZpYmePkNDQTL0joDJzqhde0JU4NHXEnU/xA2qPRa5A6JwY/gS5ewUU6OZ5drkO2Ze
        3oLdmSlZDsz6aWzgueVa5Eot7n7uU2BVlfp6mYY6ZLY2ejXX3n9dMvMc6Xc/zalFnsq0QLeqmiC/PtFf
        1ymVP8hyro9l6O0aGqBpoL9SeT/RRU8UZgKzCToWwueJGqrIVVcU1iuLjRrkVlz47EdZlTQdorC6j73k
        ksd1Ih6Yo6GKroboABMengZrAmaT9bnylyt+whYd0ET8brGSHAT9/s9PW5uGR2p6NVPUUfPU1fUX+aMG
        ELWFytgAAAAASUVORK5CYII=
</value>
  </data>
</root>